module.exports = async (page, scenario, vp) => {
  // –ñ–¥–µ–º, –ø–æ–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è
  await page.waitForLoadState('load');

  // –ñ–¥–µ–º, –ø–æ–∫–∞ —Å–µ—Ç—å —É—Å–ø–æ–∫–æ–∏—Ç—Å—è
  await page.waitForLoadState('networkidle');

  const dialogSelector = 'dialog[open]';

  try {
    // 1. –ñ–¥—ë–º, –ø–æ—è–≤–∏—Ç—Å—è –ª–∏ –¥–∏–∞–ª–æ–≥ (–¥–æ 30 —Å–µ–∫)
    await page.waitForSelector(dialogSelector, { state: 'visible', timeout: 30000 });
    console.log('üëÄ Dialog –ø–æ—è–≤–∏–ª—Å—è.');

    // 2. –ï—Å–ª–∏ –ø–æ—è–≤–∏–ª—Å—è ‚Äî –∂–¥—ë–º, –ø–æ–∫–∞ –∏—Å—á–µ–∑–Ω–µ—Ç (–¥–æ 30 —Å–µ–∫)
    try {
      await page.waitForSelector(dialogSelector, { state: 'hidden', timeout: 30000 });
      console.log('‚úÖ Dialog –∏—Å—á–µ–∑, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º.');
    } catch (e) {
      console.log('‚ö†Ô∏è Dialog –Ω–µ –∏—Å—á–µ–∑ –∑–∞ 30 —Å–µ–∫, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å —Ç–µ–º, —á—Ç–æ –µ—Å—Ç—å.');
    }

  } catch (e) {
    // –ï—Å–ª–∏ –∑–∞ 10 —Å–µ–∫ —Ç–∞–∫ –∏ –Ω–µ –ø–æ—è–≤–∏–ª—Å—è ‚Äî –∏–¥—ë–º –¥–∞–ª—å—à–µ
    console.log('‚ö†Ô∏è Dialog —Ç–∞–∫ –∏ –Ω–µ –ø–æ—è–≤–∏–ª—Å—è, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º.');
  }

  // await page.waitForSelector('dialog[open]', { state: 'hidden', timeout: 60000 });

  // const dialogSelector = 'dialog[open]';
  // try {
  //   // –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–∂–¥–∞—Ç—å—Å—è –ø–æ—è–≤–ª–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
  //   await page.waitForSelector(dialogSelector, { state: 'visible', timeout: 60000 });

  //   // –ï—Å–ª–∏ –ø–æ—è–≤–∏–ª—Å—è ‚Üí –∂–¥–µ–º —Å–∫—Ä—ã—Ç–∏—è
  //   await page.waitForSelector(dialogSelector, { state: 'hidden', timeout: 100000 });
  //   console.log('‚úÖ –î–∏–∞–ª–æ–≥ –ø–æ—è–≤–∏–ª—Å—è –∏ –∏—Å—á–µ–∑, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º');
  // } catch (e) {
  //   if (e.name === 'TimeoutError') {
  //     console.log('‚ö†Ô∏è –î–∏–∞–ª–æ–≥ –Ω–µ –ø–æ—è–≤–∏–ª—Å—è, –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ –∏–¥–µ–º –¥–∞–ª—å—à–µ');
  //     await page.screenshot({ path: `no_dialog_${Date.now()}.png`, fullPage: true });
  //   } else {
  //     console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –¥–∏–∞–ª–æ–≥–æ–º:', e);
  //     await page.screenshot({ path: `dialog_error_${Date.now()}.png`, fullPage: true });
  //     throw e; // —Ç–µ—Å—Ç –ø–∞–¥–∞–µ—Ç
  //   }
  // }

  // await clickWhenReady(page, 'text=Get started', 10000);
  await page.waitForTimeout(5000);
  await page.getByText('Get started', { exact: true }).click();
  await page.waitForTimeout(2500);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–ª–∏–∫–∞
// async function clickWhenReady(page, selectorOrOptions, timeout = 10000) {
//   try {
//     let el;

//     if (typeof selectorOrOptions === 'string') {
//       // –û–±—ã—á–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä
//       el = page.locator(selectorOrOptions);
//     } else if (typeof selectorOrOptions === 'object' && selectorOrOptions.role) {
//       // –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ getByRole
//       el = page.getByRole(selectorOrOptions.role, { name: selectorOrOptions.name });
//     } else {
//       throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è clickWhenReady');
//     }

//     await el.waitFor({ state: 'visible', timeout });
//     await el.scrollIntoViewIfNeeded();
//     await el.click({ force: true });

//     console.log(`‚úÖ –ö–ª–∏–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É "${JSON.stringify(selectorOrOptions)}" –≤—ã–ø–æ–ª–Ω–µ–Ω`);
//   } catch {
//     console.log(`‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç "${JSON.stringify(selectorOrOptions)}" –Ω–µ –ø–æ—è–≤–∏–ª—Å—è –∑–∞ ${timeout / 1000} —Å–µ–∫. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–ª–∏–∫.`);
//   }
// }